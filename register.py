# register.py ‚Äì Epic Games —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –≤–≤–æ–¥–æ–º e-mail (–∏—é–ª—å-2025)

import random
import asyncio
import re
import traceback
import uuid
from playwright.async_api import async_playwright, Browser
from faker import Faker

faker = Faker()
REGISTER_URL = "https://www.epicgames.com/id/register/date-of-birth?lang=ru"


async def cookie_guard(page):
    """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–π cookie-–±–∞–Ω–Ω–µ—Ä."""
    for txt in ("–ü—Ä–∏–Ω—è—Ç—å", "Accept"):
        btn = page.locator(f"button:has-text('{txt}')")
        if await btn.is_visible():
            await btn.click()
            break


async def pick_from_combobox(frame, label_ru, val):
    """–í—ã–±–∏—Ä–∞–µ—Ç –∏–∑ combobox ¬´–î–µ–Ω—å¬ª –∏–ª–∏ ¬´–ú–µ—Å—è—Ü¬ª."""
    btn = frame.get_by_role("combobox", name=label_ru)
    await btn.click()
    month_map = ["—è–Ω–≤","—Ñ–µ–≤","–º–∞—Ä","–∞–ø—Ä","–º–∞–π","–∏—é–Ω",
                 "–∏—é–ª","–∞–≤–≥","—Å–µ–Ω","–æ–∫—Ç","–Ω–æ—è","–¥–µ–∫"]
    target = month_map[int(val)-1] if label_ru == "–ú–µ—Å—è—Ü" else val
    opt = frame.get_by_role("option", name=re.compile(rf"^{re.escape(target)}$", re.I))
    if await opt.count():
        await opt.click()
    else:
        await frame.get_by_role("option").nth(int(val)-1).click()


async def find_frame_with_selector(page, css_list, timeout=15_000):
    """
    –ò—â–µ—Ç iframe –∏–ª–∏ root, –≥–¥–µ –µ—Å—Ç—å –ª—é–±–æ–π —Å–µ–ª–µ–∫—Ç–æ—Ä –∏–∑ css_list.
    """
    await page.wait_for_load_state("domcontentloaded")
    await cookie_guard(page)
    for _ in range(timeout // 500):
        # –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π —Ñ—Ä–µ–π–º
        for css in css_list:
            if await page.query_selector(css):
                return page.main_frame
        # –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–µ iframe
        for fr in page.frames:
            for css in css_list:
                if await fr.query_selector(css):
                    return fr
        await asyncio.sleep(0.5)
    raise RuntimeError(f"–ù–µ –Ω–∞–π–¥–µ–Ω —Ñ—Ä–µ–π–º –¥–ª—è —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤: {css_list}")


async def register_epic_account(email: str, password: str) -> None:
    print(f"\nüöÄ –°—Ç–∞—Ä—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {email}")
    browser: Browser | None = None
    try:
        async with async_playwright() as p:
            browser = await p.chromium.launch(
                headless=False,
                args=["--no-sandbox", "--disable-blink-features=AutomationControlled"]
            )
            context = await browser.new_context(locale="ru-RU")
            page = await context.new_page()

            # 1) –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
            await page.goto(REGISTER_URL, wait_until="domcontentloaded")
            dob_frame = await find_frame_with_selector(
                page, ["input[placeholder='–ì–æ–¥']", "select[name='day']"]
            )
            year      = str(random.randint(1993, 2005))
            month_num = str(random.randint(1, 12))
            day_num   = str(random.randint(1, 28))
            await pick_from_combobox(dob_frame, "–î–µ–Ω—å",  day_num)
            await pick_from_combobox(dob_frame, "–ú–µ—Å—è—Ü", month_num)
            await dob_frame.fill("input[placeholder='–ì–æ–¥']", year)
            print(f"üìÖ –î–†: {day_num}.{month_num}.{year}")
            await dob_frame.get_by_role(
                "button", name=re.compile("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å|Continue", re.I)
            ).click()

            # 2) –§–æ—Ä–º–∞ —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏
            await page.wait_for_url(re.compile(r"/register\?lang="), timeout=15_000)
            reg_frame = await find_frame_with_selector(
                page, ["input[name='email']:visible", "input[name='displayName']"]
            )

            # ==== –≤–≤–æ–¥ e-mail –∏–∑ tempmail —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π ====
            print(f"üîß DEBUG: –≤–≤–æ–¥–∏–º {email} –≤ —Ñ–æ—Ä–º—É")
            email_input = reg_frame.locator("input[name='email']:visible").first
            await email_input.click()
            await email_input.fill("")                   # –æ—á–∏—â–∞–µ–º
            await email_input.type(email, delay=70)      # ¬´—Ä—É—á–Ω–æ–π¬ª –≤–≤–æ–¥
            await email_input.press("Tab")               # —Ç—Ä–∏–≥–≥–µ—Ä–∏–º blur
            await page.wait_for_timeout(1000)            # –∂–¥—ë–º JS-–≤–∞–ª–∏–¥–∞—Ü–∏—é

            # –µ—Å–ª–∏ Epic –ø–æ–¥—á–∏—Å—Ç–∏–ª –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–∏–ª e-mail
            current = await email_input.input_value()
            if current != email:
                raise RuntimeError(f"Epic –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–ª email ‚Üí ¬´{current}¬ª")

            # ==== –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è ====
            first = faker.first_name()
            last  = faker.last_name()
            display_name = f"{first.lower()}.{last.lower()}{uuid.uuid4().hex[:6]}"
            print(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º displayName: {display_name}")

            await reg_frame.fill("input[name='name'], input[name='firstName']", first)
            await reg_frame.fill("input[name='familyName'], input[name='lastName']", last)
            await reg_frame.fill("input[name='displayName']", display_name)
            await reg_frame.fill("input[name='password']",    password)

            # —Å–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω—ã
            country_btn = reg_frame.get_by_role("combobox", name=re.compile("–°—Ç—Ä–∞–Ω–∞", re.I))
            if await country_btn.count():
                await country_btn.click()
                country_opt = reg_frame.get_by_role(
                    "option", name=re.compile(re.escape(faker.country()), re.I)
                )
                if await country_opt.count():
                    await country_opt.click()
                else:
                    await reg_frame.get_by_role("option").first.click()

            # Terms of Service
            tos = reg_frame.get_by_label("–Ø –ø—Ä–æ—á–∏—Ç–∞–ª(-–∞) –∏ –ø—Ä–∏–Ω–∏–º–∞—é –£—Å–ª–æ–≤–∏—è –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è")
            if await tos.count():
                await tos.check()
            else:
                inp = reg_frame.locator("input[name='termsOfService']")
                await inp.scroll_into_view_if_needed()
                await inp.check(force=True)

            print("‚úçÔ∏è –ê–Ω–∫–µ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞")

            # 3) –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É –∏ –∂–¥—ë–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            await reg_frame.locator(
                "button[type='submit'], button:has-text('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å')"
            ).first.click()

            await page.wait_for_selector(
                "text=/–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥—Ä–µ—Å|Check your email/", timeout=25_000
            )
            print("‚úÖ –£—á—ë—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∞, –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")

            await context.close()
            await browser.close()

    except Exception:
        print("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:")
        traceback.print_exc()
        if browser:
            await browser.close()
        # –ø—Ä–æ–∫–∏–¥—ã–≤–∞–µ–º –Ω–∞–≤–µ—Ä—Ö, —á—Ç–æ–±—ã main.py —Å–æ–∑–¥–∞–ª –Ω–æ–≤—ã–π email
        raise